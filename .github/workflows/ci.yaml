on:
  push:
  pull_request:

name: CI

jobs:
  docker:
    name: Docker
    strategy:
      fail-fast: false
      matrix:
        docker_version:
          - 18.09
          - 19.03
          - 20.03
        docker_channel:
          - stable
          - test
          # - nightly
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-latest
        include:
          # macOS
          - os: macos-latest
            docker_channel: stable
            docker_version: 19.03
          - os: macos-latest
            docker_channel: edge
            docker_version: 19.03
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 2
      - name: setup Docker
        uses: ./
        # uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker_version }}
          docker_channel: ${{ matrix.docker_channel }}
      - name: Test
        run: |
          set -x
          docker version
          cat /etc/docker/daemon.json || true
          cat /Users/runner/.docker/daemon.json || true
          docker buildx version || true
          docker buildx ls || true

  docker-default:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 2
      # 必须先登录后安装 Docker
      # you must login docker first, then install docker
      # Login docker hub or other docker registry
      # test docker login
      - uses: docker/login-action@v1
        if: |
          github.event_name == 'push'
          && startsWith( matrix.os, 'ubuntu')
        with:
          # registry: contoso.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: setup docker(default)
        uses: ./
        # uses: docker-practice/actions-setup-docker@master
      - run: docker version
      - name: docker login on macOS
        run: |
          echo ${docker_password} | docker login -u ${docker_username} --password-stdin ${docker_registry:-}
        if: |
          github.event_name == 'push'
          && startsWith( matrix.os , 'macos' )
        env:
          # docker_registry: contoso.azurecr.io
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |
          set -x

          docker pull alpine:latest
          tag=${version:-19.03}-${channel:-stable}-${os}
          docker tag alpine:latest khs1994/alpine:${tag}
        env:
          os: ${{ matrix.os }}
          # version: ${{ matrix.docker_version }}
          # channel: ${{ matrix.docker_channel }}
      - name: Push Docker Image
        if: github.event_name == 'push'
        run: |
          set -x

          tag=${version:-19.03}-${channel:-stable}-${os}
          docker push khs1994/alpine:${tag}
        env:
          os: ${{ matrix.os }}
          # version: ${{ matrix.docker_version }}
          # channel: ${{ matrix.docker_channel }}

  docker-nightly:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 2
      - name: setup docker
        uses: ./
        # uses: docker-practice/actions-setup-docker@master
        with:
          docker_nightly_version: snapshot-20200915
          docker_channel: nightly
      - run: docker version

  notsupport-platform:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 2
      - name: setup docker(default)
        uses: ./
        # uses: docker-practice/actions-setup-docker@master
